name: "CodeQL Security Scan"

on:
  push:
    branches:
      - develop
      - "release/*"
      - "hotfix/*"
      - main
  pull_request:
    branches:
      - develop
      - "release/*"
      - "hotfix/*"
      - main
  schedule:
    - cron: '0 22 * * 0'  # Every Sunday at 10:00 PM UTC

jobs:
  discover-microservices:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Microservices
        id: set-matrix
        run: |
          SERVICES=$(ls -d microservices/*/ 2>/dev/null | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected services: $SERVICES"
          echo "services=$SERVICES" >> "$GITHUB_OUTPUT"

  analyze-microservices:
    name: Analyze Java Microservices (${{ matrix.service }})
    runs-on: ubuntu-latest
    needs: discover-microservices
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.discover-microservices.outputs.services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "java-kotlin"
          build-mode: "manual"

      - name: Build & Run Tests
        working-directory: ${{ matrix.service }}
        run: mvn clean verify -Pintegration-tests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

  analyze-frontend:
    name: Analyze Frontend (React)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "javascript-typescript"
          build-mode: "none"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript"
